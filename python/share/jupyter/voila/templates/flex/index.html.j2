{% extends "nbconvert/templates/flex/index.html.j2" %}

{%- block favicon %}
	{%- set custom_favicon = flex.get_favicon() %}
	{% if custom_favicon | trim | length -%}
	<link rel="shortcut icon" type="image/ico" href="{{ resources.base_url }}voila/files/{{ custom_favicon }}" />
	{% else -%}
	<link rel="shortcut icon" type="image/ico" href="{{ resources.base_url }}voila/static/favicon.png" />
	{%- endif %}
{%- endblock favicon %}

{% block html_head_css -%}
	{%- block flex_embed_css %}
	{{ resources.include_css("static/jupyter-flex-embed.css") }}
	{%- endblock flex_embed_css -%}

	{%- block flex_custom_css %}
	{%- set custom_css = flex.get_custom_css() -%}
	{%- if custom_css | trim | length %}
    <link rel="stylesheet" type="text/css" href="{{ resources.base_url }}voila/files/{{ custom_css }}" >
    {%- endif %}
	{%- endblock flex_custom_css -%}
{%- endblock html_head_css -%}

{%- block body_before_flex -%}
{%- block body_header %}
	<div id="voila_body_loop">
		<div id="voila-executing">
			<div class="loading-notebook">
				<div class="text-center">
					<p id="voila-cell-count">... starting kernel ...</p>
				</div>
			</div>
		</div>

		<script>
			var voilaCellExecuteAfter = function(cellIndex, cellCount) {};
			var voilaCellExecuteBefore = function(cellIndex, cellCount) {
				var el = document.getElementById("voila-cell-count");
				el.innerHTML = "... executing cell " + cellIndex + " of " + cellCount + " ...";
			};
			var voila_heartbeat = function() {
  				console.log('Ok, voila is still executing...');
			}
		</script>
{%- endblock body_header -%}

{%- block execute_cells -%}
	{# From this point on, the kernel is started #}
	{# This is excuted on base.html.j2 #}

	{%- with kernel_id = kernel_start(nb) %}
		<script id="jupyter-config-data" type="application/json">
			{
				"baseUrl": "{{ resources.base_url }}",
				"kernelId": "{{ kernel_id }}"
			}
		</script>

		{%- set cellCount = nb.cells|length -%}
		{#
		Voila is using Jinja's Template.generate method to not render the whole template in one go.
		The current implementation of Jinja will however not yield template snippets if we call a blocks' super()
		Therefore it is important to have the cell loop in the template.
		The issue for Jinja is: https://github.com/pallets/jinja/issues/1044
		#}
		<script>
			voilaCellExecuteBefore(1, {{ cellCount }});
		</script>
		{% for cell in cell_generator(nb, kernel_id) %}
		{%- set cellLoop = loop -%}
		<script>
			voilaCellExecuteAfter({{ cellLoop.index }}, {{ cellCount }});
			{%- if cellLoop.index != cellCount %}
			voilaCellExecuteBefore({{ cellLoop.index }} + 1, {{ cellCount }});
			{%- endif %}
		</script>
		{% endfor -%}
	{%- endwith -%}
{%- endblock execute_cells -%}

{% block after_body_loop %}
	</div> <!-- voila_body_loop -->
{%- endblock %}

	<script type="text/javascript">
	(function() {
		// Remove the loading element
		var el = document.getElementById("voila-executing");
		el.parentNode.removeChild(el);
	})();
	</script>
{%- endblock body_before_flex %}

{% block body_end_js -%}
	{%- block body_end_js_requirejs %}
	{{ resources.include_js("static/require.min.js") }}
	<script>
		requirejs.config({ baseUrl: '{{resources.base_url}}voila/static/', waitSeconds: 30})
	</script>
	{%- endblock body_end_js_requirejs %}

	{{ resources.include_js("static/jupyter-flex-embed.js") }}
{%- endblock body_end_js %}

