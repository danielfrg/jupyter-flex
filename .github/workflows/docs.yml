name: docs

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: docs-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  docs:
    name: Build docs

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.10"]
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow

      - name: Install Task
        uses: arduino/setup-task@v1

      # ------------------------------------------------------------------------
      # JS

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load cached node_modules
        id: cached-node_modules
        uses: actions/cache@v3
        with:
          path: js/node_modules
          key: >
            node_modules
            ${{ runner.os }}
            node-${{ matrix.node-version }}
            ${{ hashFiles('js/package*.json') }}

      - name: Install JS deps
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        run: |
          task js-install

      - name: Build JS
        run: |
          task download-assets
          task js-build

      # ------------------------------------------------------------------------
      # Python

      - name: Python - Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        id: cached-python-env
        with:
          path: ${{ env.pythonLocation }}
          key: >
            python-docs
            ${{ runner.os }}
            python-${{ matrix.python-version }}
            ${{ hashFiles('python/pyproject.toml') }}
            ${{ hashFiles('python/requirements/*') }}

      - name: Install dependencies
        if: steps.cached-python-env.outputs.cache-hit != 'true'
        run: |
          pip install -r python/requirements/pyproject-docs.txt
          pip install -r python/requirements/examples.txt

      - name: Install Hatch and other dependencies
        run: |
          pip install --upgrade hatch
          task download-testdata

      - name: Print Python info
        run: |
          which python
          python --version
          which pip
          pip --version
          pip freeze

      # ------------------------------------------------------------------------
      # Build docs

      - name: Build Python package
        run: task build

      - name: Install package
        run: |
          cd python
          pip uninstall -y jupyter-flex
          pip install dist/*.whl
          pip freeze

      - name: Build docs
        run: |
          task docs

      # ------------------------------------------------------------------------
      # Release

      - name: Staging - Upload to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=site
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Prod - Upload to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=site --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
